{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9b00c0628a1990ced428ea4cad7e5eb3c0138869cb583720a2d088fbb30c06097ea8923ac75b31ade8a58ca1094b11a7068222c34f9174424cdcfe099ed678a6",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "'tracker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'tracker';\n\n  data = [\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n    {\n      badgeText: 'きくや＿タスク',\n      badgeColor: 'teal',\n      backgroundColor: 'zinc',\n      textColor: 'white',\n      codeText: 'ALO-4596',\n      codeColor: '#2dd4bf',\n    },\n  ];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".custom div {\r\n    color: #fff;\r\n    margin-bottom: 5px;\r\n}\r\ninput {\r\n  font-family: inherit;\r\n  width: 100%;\r\n  font-size: 100%;\r\n  border: 0;\r\n  outline: 0;\r\n  color: #fff;\r\n  border-radius: 3px;\r\n  display: block;\r\n  padding: 5px 12px;\r\n  border: 1px solid rgba(0, 0, 0, 0.5);\r\n  background: rgba(0, 0, 0, 0.25);\r\n  font-size: 1rem;\r\n}\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n[placeholder]::-webkit-input-placeholder {\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container-fluid p-5\">\n  <div class=\"row mb-5\">\n    <div class=\"grid\">\n      <div class=\"custom\">\n        <div>カテゴリー</div>\n        <input type=\"text\" />\n      </div>\n      <div class=\"custom\">\n        <div>登録日</div>\n        <input type=\"text\" />\n      </div>\n      <div class=\"custom\">\n        <div>担当者</div>\n        <input type=\"text\" />\n      </div>\n      <div class=\"custom\">\n        <div>マイルストーン</div>\n        <input type=\"text\" />\n      </div>\n      <div class=\"custom\">\n        <div>優先度</div>\n        <input type=\"text\" />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div *ngFor=\"let item of data\" class=\"col-md-4 mb-3\">\n      <app-work-card></app-work-card>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-e0b50422c525d98095b0ae57a104eece7fa5e222dfd07acbb1fbd4b166d6fc23cab365a965582afd2c29174317ad98bff9485c43bae9aac437ce1422274667cb",
            "file": "src/app/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "borderColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "radius",
                    "defaultValue": "\"rounded-md\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "\"Simple Button\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "\"btn-primary\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"btn-primary\" | \"btn-secondary\" | \"btn-success\" | \"btn-danger\" | \"btn-info\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input()\n  variant?: \"btn-primary\" | \"btn-secondary\" | \"btn-success\" | \"btn-danger\" | \"btn-info\" = \"btn-primary\"\n\n  @Input()\n  text?:string = \"Simple Button\"\n\n  @Input()\n  borderColor?:string\n\n  @Input()\n  radius?: string = \"rounded-md\"\n\n  @Input()\n  isLoading?: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".rounded-md {\r\n  border-radius: 0.375rem;\r\n}\r\n.rounded-lg {\r\n  border-radius: 0.75rem;\r\n}\r\n.rounded-full {\r\n  border-radius: 9999px;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n.loading {\r\n  color: white;\r\n  height: 1rem;\r\n  width: 1rem;\r\n  margin-right: .5rem;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n",
                    "styleUrl": "./button.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button\n  type=\"button\"\n  class=\"btn\"\n  [ngClass]=\"[variant, radius]\"\n  style=\"border-width: 4px; border-style: solid; display: flex; align-items: center;\"\n  [ngStyle]=\"{ 'border-color': borderColor }\"\n>\n  <svg\n    class=\"loading\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    *ngIf=\"isLoading\"\n  >\n    <circle\n      class=\"opacity-25\"\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      stroke-width=\"4\"\n    ></circle>\n    <path\n      class=\"opacity-75\"\n      fill=\"currentColor\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    ></path>\n  </svg>\n  {{ text }}\n</button>\n"
        },
        {
            "name": "WorkCardComponent",
            "id": "component-WorkCardComponent-b4e70cdb7128c8b14286937849bc8a142ddb41e70242a19f6cab3e9c07f4c96ca70fe1a84beb423ec008efd7d4e5d4e51805483677f5b27cfaf9ca0ab024c7cb",
            "file": "src/app/work-card/work-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-work-card",
            "styleUrls": [
                "./work-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./work-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "badgeBackgroundColor",
                    "defaultValue": "\"#fed85d\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "badgeText",
                    "defaultValue": "\"きくや＿タスク\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "badgeTextColor",
                    "defaultValue": "\"#000000\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "spacing",
                    "defaultValue": "\"spacing-10\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "\"dark\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getClass",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-work-card',\n  templateUrl: './work-card.component.html',\n  styleUrls: ['./work-card.component.css']\n})\nexport class WorkCardComponent implements OnInit {\n\n  @Input()\n  badgeBackgroundColor?: string = \"#fed85d\"\n\n  @Input()\n  badgeTextColor?: string = \"#000000\"\n\n  @Input()\n  badgeText?: string = \"きくや＿タスク\"\n\n  @Input()\n  theme: string = \"dark\"\n\n  @Input()\n  spacing: string = \"spacing-10\"\n\n\n  getClass(){\n    return this.theme + \" \" + this.spacing\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card {\r\n  border: none;\r\n  border-radius: 10px;\r\n}\r\n\r\n.dark {\r\n  background-color: rgb(2, 2, 2);\r\n  color: #fff;\r\n}\r\n\r\n.light {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.c-details span {\r\n  font-weight: 300;\r\n  font-size: 13px;\r\n}\r\n\r\n.icon {\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: rgb(36, 36, 36);\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 39px;\r\n}\r\n\r\n.user-details div {\r\n  font-size: 0.75rem;\r\n}\r\n.user-details span {\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.badge {\r\n  /* color: #3a3a3a; */\r\n  font-size: 0.65rem;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  height: 20px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  /* background-color: #fed85d; */\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.heading {\r\n  font-size: 1rem;\r\n}\r\n\r\n.details {\r\n  font-size: 0.75rem;\r\n}\r\n\r\n.dark .details-link {\r\n  color: #ccc;\r\n  text-decoration: none;\r\n  margin-right: 10px;\r\n}\r\n\r\n.dark .details-link:hover {\r\n  color: #fff;\r\n}\r\n\r\n.light .details-link {\r\n  color: rgb(63, 63, 63);\r\n  text-decoration: none;\r\n  margin-right: 10px;\r\n}\r\n\r\n.light .details-link:hover {\r\n  color: rgb(2, 2, 2);\r\n}\r\n\r\n.simplegrid {\r\n  grid-template-columns: repeat(1, minmax(0, 1fr));\r\n  display: grid;\r\n}\r\n\r\n.spacing-5 {\r\n  gap: 8px;\r\n}\r\n\r\n.spacing-10 {\r\n  gap: 16px;\r\n}\r\n\r\n.spacing-15 {\r\n  gap: 24px;\r\n}",
                    "styleUrl": "./work-card.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 28
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card p-3 simplegrid\" [ngClass]=\"getClass()\">\n  <div class=\"d-flex justify-content-between\">\n    <div class=\"d-flex flex-row align-items-center\">\n      <div class=\"icon\">\n        <img\n          src=\"https://avatars.dicebear.com/api/adventurer/your-custom-seed.svg\"\n        />\n      </div>\n      <div class=\"ms-2 user-details\">\n        <div class=\"mb-0\">Sayed Rafi / サイド ラフィ</div>\n        <div>2022-03-08 | 12:25:42</div>\n      </div>\n    </div>\n    <div\n      class=\"badge\"\n      [ngStyle]=\"{\n        'background-color': badgeBackgroundColor,\n        color: badgeTextColor\n      }\"\n    >\n      <span>{{ badgeText }}</span>\n    </div>\n  </div>\n  <div>\n    <h3 class=\"heading\">\n      マイサロン会員詳細画面の中に購入履歴を確認できる部分を作成する\n    </h3>\n  </div>\n  <div>\n    <div class=\"row details\">\n      <a class=\"col details-link\" href=\"#\">担当者: Sayed Rafi (ラフィ)</a>\n      <a class=\"col details-link\" href=\"#\">マイルストーン: 2022.4</a>\n    </div>\n    <div class=\"row details\">\n      <a class=\"col details-link\" href=\"#\">優先度: 中</a>\n      <a class=\"col details-link\" href=\"#\">Code: ALO-4953</a>\n    </div>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a1043298e65127acf9f02394c22061233e54670d564563f5908473481711f799dc1bdee421f65983cd2840ac406e6ed2eef30f513dc8cb77365ee61770e31310",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WorkCardComponent } from './work-card/work-card.component';\nimport { ButtonComponent } from './button/button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorkCardComponent,\n    ButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "WorkCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Dark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/WorkCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        text: \"Default Button\",\r\n        variant: 'btn-primary',\r\n        isLoading: false,\r\n        radius: \"rounded-lg\"\r\n    },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/WorkCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/WorkCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n    props: {\r\n        text: \"Success Button\",\r\n        variant: 'btn-success',\r\n        isLoading: false,\r\n        radius: \"rounded-lg\"\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/WorkCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WorkCardComponent>",
                "defaultValue": "(args: WorkCardComponent) => ({\r\n    props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/WorkCard.stories.ts": [
                {
                    "name": "Dark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/WorkCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/WorkCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/WorkCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/WorkCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WorkCardComponent>",
                    "defaultValue": "(args: WorkCardComponent) => ({\r\n    props: args,\r\n})"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        text: \"Default Button\",\r\n        variant: 'btn-primary',\r\n        isLoading: false,\r\n        radius: \"rounded-lg\"\r\n    },\r\n})"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n    props: {\r\n        text: \"Success Button\",\r\n        variant: 'btn-success',\r\n        isLoading: false,\r\n        radius: \"rounded-lg\"\r\n    },\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/work-card/work-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WorkCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/WorkCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Dark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/WorkCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/WorkCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/WorkCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}